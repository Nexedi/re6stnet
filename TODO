Bugs :
    Find a name for the project : the projet is ( or should be ) independant from vifib, openvpn, babel,
         and so should the name; btw we aim to build a distributed, scalable, resilient VPN....
    When no peer is avalaible without the --no-boot option, it crash => see below
    Once in a while, when exiting vifibnet ( not very properly, via Ctrl+C ), processes ( openvpn and babel )
         still remain and disturb further attemps ( must be killed for vifibnet to work again )

To be done :
    Replace comments at the beginning of functions with docstrings & give all fn docstrings
    Do a clean-up in the import
    Remove the parameters to choose the number of clients
    Use the server events ( client connection/deconnection ) to do something usefull
    In peers DB, remove some peers when they are too many of them
    Contact the server using vifibnet and not the underlying network when possible

To be discuss:
    U : Remove the --no-boot option since we know when no node is avalaible
    G : the no-boot option is only useful when the server knows no peer,
        irl it should never happen, no-boot is a debug option
    U : Ok, but the server knows when no peers is avalaible, doesn't he ?

    How we choose which protocol we use :
        IMO, we should use UDP. I've read many times than TCP other TCP can be catastrophic in terme of performance
        Every time a packet is lost, it is resend 2 times, one for each TCP tunnel
        And many GW allow UDP port forwarding (for bittorent, Xbox, ...) but not TCP port forwarding

    Use peers_db.populate(100) every once in a while ?
    G : yes but be warry of the refresh time ( populate the db once every 20s is bad.. ) 
    U : I agree. Once evry hours should be sufficient, and when their too few peers avalaible.

    G : don't reconnect to server each time we repopulate in peers_db ?
    U : we might recontact the server evry 1H or even less. So i think it is a good thing not to keep the connection alive
