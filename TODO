To be done :
    Do a 'real' test, on one ( or more ) real machine(s) preferably :
       - package re6stnet
       - install re6stnet
       - follow the HOW TO section of the man page to setup a network
       - see if it works....

    Put more information in the token mail ( registry ), such as :
        - the ip address of the network being built
        - the creator of the network ( add option in registry ? )

    Make sure the re6stnet ip address is added on only one interface
    ( tweak the ovpn-server script ), else duplicate addresses appears in routing
    tables.

    Fix bootstrap problem :
        registry & --private option ( see re6stnet man page HOW TO ).
        one have to start the registry twice, the first time without
        the --private option

    Use an algorithm to choose which connections to keep and/or establish
    instead of pure randomness
        number of routes / tunnel

    Warn babeld about the tunnels wich are about to be deleted. Maybe we could just increase the cost.

    Put a section about how to build the package from the sources in the README

---------------------------------------------------------------------------------------------
    We should put a high latency on the servers openvpn interfaces to avoid people staying connected to it.

    Check that blacklisting for peers connected to us works
    Check that if 2 tunnels are established between 2 peers, one of them is destroyed

    Check peers ID when connectiong to the server

    Choose peer DB size
